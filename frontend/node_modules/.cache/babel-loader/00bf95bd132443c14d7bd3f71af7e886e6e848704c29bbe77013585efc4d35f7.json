{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rasoo\\\\Downloads\\\\adwait\\\\expense-tracker_fullstack\\\\frontend\\\\src\\\\Components\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [groupName, setGroupName] = useState('');\n  const [users, setUsers] = useState([]);\n  const [expenses, setExpenses] = useState([]);\n  const handleAddUser = name => {\n    setUsers([...users, name]);\n  };\n  const handleAddExpense = (description, amount, paidBy) => {\n    setExpenses([...expenses, {\n      description,\n      amount,\n      paidBy\n    }]);\n  };\n  const calculateBalances = () => {\n    const balances = {};\n    users.forEach(user => {\n      balances[user] = 0;\n    });\n    expenses.forEach(expense => {\n      balances[expense.paidBy] += expense.amount;\n      const share = expense.amount / (users.length - 1);\n      users.forEach(user => {\n        if (user !== expense.paidBy) {\n          balances[user] -= share;\n        }\n      });\n    });\n    return balances;\n  };\n  const handleGroupCreation = () => {\n    // Perform any necessary actions for group creation\n    // For now, let's just log the group name and users\n    console.log(\"Group Name:\", groupName);\n    console.log(\"Users:\", users);\n  };\n  const handleBalanceClick = () => {\n    const balances = calculateBalances();\n    console.log(\"Balances:\", balances);\n    // You can display the balances in your UI as needed\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Expense Splitter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Group Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: groupName,\n        onChange: e => setGroupName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGroupCreation,\n      children: \"Create Group\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Add Users\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: users.map((user, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: user\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Add User:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleAddUser( /* value from input */),\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Add Expense\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Description:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Amount:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Paid By:\", /*#__PURE__*/_jsxDEV(\"select\", {\n        children: users.map((user, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          children: user\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleAddExpense( /* values from inputs */),\n      children: \"Add Expense\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleBalanceClick,\n      children: \"Check Balances\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"RtLr/wVh0PmA7sWC2MRIZkQgSY8=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","Home","groupName","setGroupName","users","setUsers","expenses","setExpenses","handleAddUser","name","handleAddExpense","description","amount","paidBy","calculateBalances","balances","forEach","user","expense","share","length","handleGroupCreation","console","log","handleBalanceClick","e","target","value","map","index"],"sources":["C:/Users/rasoo/Downloads/adwait/expense-tracker_fullstack/frontend/src/Components/Home.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst Home = () => {\r\n  const [groupName, setGroupName] = useState('');\r\n  const [users, setUsers] = useState([]);\r\n  const [expenses, setExpenses] = useState([]);\r\n\r\n  const handleAddUser = (name) => {\r\n    setUsers([...users, name]);\r\n  };\r\n\r\n  const handleAddExpense = (description, amount, paidBy) => {\r\n    setExpenses([...expenses, { description, amount, paidBy }]);\r\n  };\r\n\r\n  const calculateBalances = () => {\r\n    const balances = {};\r\n    users.forEach(user => {\r\n      balances[user] = 0;\r\n    });\r\n\r\n    expenses.forEach(expense => {\r\n      balances[expense.paidBy] += expense.amount;\r\n      const share = expense.amount / (users.length - 1);\r\n      users.forEach(user => {\r\n        if (user !== expense.paidBy) {\r\n          balances[user] -= share;\r\n        }\r\n      });\r\n    });\r\n\r\n    return balances;\r\n  };\r\n\r\n  const handleGroupCreation = () => {\r\n    // Perform any necessary actions for group creation\r\n    // For now, let's just log the group name and users\r\n    console.log(\"Group Name:\", groupName);\r\n    console.log(\"Users:\", users);\r\n  };\r\n\r\n  const handleBalanceClick = () => {\r\n    const balances = calculateBalances();\r\n    console.log(\"Balances:\", balances);\r\n    // You can display the balances in your UI as needed\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Expense Splitter</h2>\r\n      <label>\r\n        Group Name:\r\n        <input type=\"text\" value={groupName} onChange={(e) => setGroupName(e.target.value)} />\r\n      </label>\r\n      <button onClick={handleGroupCreation}>Create Group</button>\r\n\r\n      <h3>Add Users</h3>\r\n      <ul>\r\n        {users.map((user, index) => (\r\n          <li key={index}>{user}</li>\r\n        ))}\r\n      </ul>\r\n      <label>\r\n        Add User:\r\n        <input type=\"text\" />\r\n        <button onClick={() => handleAddUser(/* value from input */)}>Add</button>\r\n      </label>\r\n\r\n      <h3>Add Expense</h3>\r\n      <label>\r\n        Description:\r\n        <input type=\"text\" />\r\n      </label>\r\n      <label>\r\n        Amount:\r\n        <input type=\"number\" />\r\n      </label>\r\n      <label>\r\n        Paid By:\r\n        <select>\r\n          {users.map((user, index) => (\r\n            <option key={index}>{user}</option>\r\n          ))}\r\n        </select>\r\n      </label>\r\n      <button onClick={() => handleAddExpense(/* values from inputs */)}>Add Expense</button>\r\n\r\n      <button onClick={handleBalanceClick}>Check Balances</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}