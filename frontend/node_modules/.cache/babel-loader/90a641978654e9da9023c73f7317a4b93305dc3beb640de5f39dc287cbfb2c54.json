{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rasoo\\\\Downloads\\\\adwait\\\\expense-tracker_fullstack\\\\frontend\\\\src\\\\Components\\\\Home.js\";\nimport React, { useState } from 'react';\nimport { Row, Col, Container } from 'react-bootstrap';\nimport InfoCard from './InfoCard';\nimport ExpenseForm from './ExpenseForm';\nimport Notification from './Notification';\nimport NewExpenseModal from './NewExpenseModal';\nimport expenseService from '../services/expense-split';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      className: \"home\",\n      children: [/*#__PURE__*/_jsxDEV(Notification, {\n        msg: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(NewExpenseModal, {\n        show: newExpModal,\n        Close: handleModalDown,\n        addExpenseModal: addExpenseModal,\n        members: members,\n        to_whom: to_whom,\n        amount: amount,\n        handleAmount: handleAmount,\n        handleRadio: handleRadio,\n        handleCheckbox: handleCheckbox\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          sm: 9,\n          children: /*#__PURE__*/_jsxDEV(ExpenseForm, {\n            handleExpName: handleExpName,\n            expName: expName,\n            handleDate: handleDate,\n            date: date,\n            to_whom: to_whom,\n            handleMember: handleMember,\n            addMember: addMember,\n            removeMember: removeMember,\n            members: members,\n            addExpenseModal: addExpenseModal,\n            splitExpenses: splitExpenses,\n            handleAmount: handleAmount,\n            amount: amount,\n            handleRadio: handleRadio,\n            handleCheckbox: handleCheckbox,\n            handleFirst: handleFirst,\n            handleSecond: handleSecond,\n            handleThird: handleThird,\n            addExpenseToInfoCard: addExpenseToInfoCard\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          sm: 3,\n          children: /*#__PURE__*/_jsxDEV(InfoCard, {\n            expName: expName,\n            date: date,\n            members: members,\n            expenses: expenses,\n            firstCard: firstCard,\n            secondCard: secondCard,\n            thirdCard: thirdCard,\n            finalCard: finalCard,\n            splitted: splitted\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"center\", {\n      className: \"footer\",\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"fab fa-github\",\n        href: \"https://github.com/Madhubalajb/Expense-Split\",\n        rel: \"noopener noreferrer\",\n        target: \"_blank\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }, this), \"built by \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"https://madhubalajb.github.io/\",\n        rel: \"noopener noreferrer\",\n        target: \"_blank\",\n        children: \"madhubala jayakumaran\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_c = Home;\nexport default Home;\n\n// const Home = () => {\n//     const [message, setMessage] = useState('')\n//     const [expName, setExpName] = useState('')\n//     const [date, setDate] = useState('')\n//     const [amount, setAmount] = useState('')\n//     const [by_whom, setBy] = useState('')\n//     const [to_whom, setTo] = useState([{name: null, isChecked: false}, {name: null, isChecked: false}])\n//     const [members, setMembers] = useState([{name: null}, {name: null}])\n//     const [expenses, setExpenses] = useState([])\n//     const [splitted, setSplitted] = useState([])  \n//     const [firstCard, setFirst] = useState(false)\n//     const [secondCard, setSecond] = useState(false)\n//     const [thirdCard, setThird] = useState(false)\n//     const [finalCard, setFinal] = useState(false)\n//     const [newExpModal, setModalUp] = useState(false) \n//     const [isExpenseAdded, setExpenseAdded] = useState(false)      \n\n//     const handleFirst = (event) => {\n//       event.preventDefault()\n//       setFirst(true)\n//     }\n//     const handleSecond = (event) => {\n//       event.preventDefault()\n//       setSecond(true)\n//     }\n//     const handleThird = () => setThird(true)\n//     const handleFinal = () => setFinal(true)\n//     const handleModalUp = () => setModalUp(true)\n//     const handleModalDown = () => setModalUp(false)\n//     const handleExpName = (event) => setExpName(event.target.value)\n//     const handleDate = (event) => setDate(event.target.value)\n//     const handleAmount = (event) => setAmount(event.target.value)\n//     const handleRadio = (event) => setBy(event.target.value)  \n\n//     const handleCheckbox = (event, index) => {\n//         const temp = [...to_whom]\n//         temp[index].name = event.target.value\n//         temp[index].isChecked = !temp[index].isChecked\n//         setTo(temp)\n//     }\n\n//     const showMessage = (message) => {\n//       setMessage(message)\n//       setTimeout(() => {\n//         setMessage(null)\n//       }, 3000)\n//     }\n\n//     const handleMember = (event, index) => {\n//       const temp = [...members]\n//       temp[index].name = event.target.value\n//       setMembers(temp)\n\n//       const temp1 = [...to_whom]\n//       temp1[index].name = event.target.value\n//       setTo(temp1)      \n//     }\n\n//     const addMember = () => {\n//       const temp = [...members]\n//       temp.push({name: null})\n//       setMembers(temp)\n\n//       const temp1 = [...to_whom]\n//       temp1.push({name: null, isChecked: false})\n//       setTo(temp1)\n//     }\n\n//     const removeMember = (index) => {\n//       const temp = [...members]\n//       temp.splice(index, 1)\n//       setMembers(temp)\n\n//       const temp1 = [...to_whom]\n//       temp1.splice(index, 1)\n//       setTo(temp1)\n//     }\n\n//     const makeNullExpense = () => {\n//       setAmount('')\n//       setBy('')\n//       const temp = [...to_whom]\n//       setTo(temp.map(foo => {\n//         return {name: foo.name, isChecked: false}\n//       }))\n//     }\n\n//     const makeNullAll = () => {\n//       setExpName('')\n//       setDate('')\n//       setMembers([{name: null}, {name: null}])\n//       setExpenses([])\n//       makeNullExpense()\n//     }\n\n//     const addExpense = () => {\n//       const newExpense = {\n//         amount: Number(amount),\n//         by_whom: by_whom,\n//         to_whom: to_whom\n//       }\n//       if(newExpense.amount !== 0 && newExpense.by_whom !== '' && newExpense.to_whom.length !== 0 && isNaN(newExpense.amount) === false) {\n//         const temp = [...expenses]\n//         temp.push(newExpense)\n//         setExpenses(temp)\n//         setExpenseAdded(true)\n//         makeNullExpense()\n//       }\n//       else if(isNaN(newExpense.amount) === true) {\n//         showMessage(<div id=\"snackbar\">Please enter a valid Amount</div>)\n//       }\n//       else {\n//         showMessage(<div id=\"snackbar\">Please enter all the Expense details</div>)\n//       }\n//     } \n\n//     const addExpenseModal = (event) => {\n//       event.preventDefault()\n//       addExpense()\n//       if(newExpModal)\n//         handleModalDown()\n//       else\n//         handleModalUp()\n//     }\n\n//     const addExpenseToInfoCard = (event) => {\n//       event.preventDefault()\n//       if(isExpenseAdded) {\n//         handleThird()\n//         setExpenseAdded(false)\n//       }\n//       else {\n//         addExpense()\n//         handleThird()\n//         setExpenseAdded(false)          \n//       }\n//     }\n\n//     function calculateExpense() {\n//       return new Promise((resolve, reject) => {\n//         let expensesOfEachMembers = members.map(memb => {\n//           return { member: memb.name, splittedExp: [] }\n//         }) \n\n//         expenses.map(expense => {\n//           let amount = expense.amount\n//           let by = expense.by_whom\n//           let to = expense.to_whom.filter(to => to.isChecked === true)\n//           let share = (to.length === 2) ? (amount / to.length).toFixed(2) : Math.floor(amount / to.length)\n\n//           to.forEach(element => {\n//             let found = expensesOfEachMembers.findIndex(foo => (foo.member === element.name && foo.member !== by))\n//             if (found !== -1) {\n//               expensesOfEachMembers[found].splittedExp.push({to: by, amount: share})\n//             }\n//           })\n//         })\n\n//         expensesOfEachMembers.forEach((item, firstIndex) => {\n//           let person1 = { name: item.member, amtToGive: 0 }\n//           let person2 = { name: null,amtToGive: 0 }\n//           let found \n//           let found1\n\n//           item.splittedExp.forEach((item, secondIndex) => {\n//             person2.name = item.to\n//             person1.amtToGive = item.amount\n//             found = expensesOfEachMembers.findIndex(item => item.member === person2.name) \n\n//             if(found !== -1) {\n//               found1 = expensesOfEachMembers[found].splittedExp.findIndex(item => item.to === person1.name)\n//               if(found1 !== -1) {\n//                 person2.amtToGive = expensesOfEachMembers[found].splittedExp[found1].amount\n//               }\n//             }\n\n//             if(person2.amtToGive !== 0 && person1.amtToGive >= person2.amtToGive) {\n//               let share = person1.amtToGive - person2.amtToGive\n//               if(share === 0) {\n//                 expensesOfEachMembers[firstIndex].splittedExp.splice(secondIndex, 1)\n//                 expensesOfEachMembers[found].splittedExp.splice(found1, 1)\n//               }\n//               else {\n//                 expensesOfEachMembers[firstIndex].splittedExp[secondIndex].amount = Math.abs(share)\n//                 expensesOfEachMembers[found].splittedExp.splice(found1, 1)\n//               }\n//             }\n//             else if(person2.amtToGive !== 0 && person1.amtToGive < person2.amtToGive) {\n//               let share = person2.amtToGive - person1.amtToGive\n//               expensesOfEachMembers[firstIndex].splittedExp.splice(secondIndex, 1)\n//               expensesOfEachMembers[found].splittedExp[found1].amount = Math.abs(share)\n//             }\n//           })\n//         })\n//         expensesOfEachMembers = expensesOfEachMembers.filter(element => element.splittedExp.length !== 0)\n//         setSplitted(expensesOfEachMembers)\n//         resolve(expensesOfEachMembers)\n//       })\n//     } \n\n//     const splitExpenses = () => {\n//       calculateExpense().then(data => {\n//         const newExpense = {\n//           expense_name: expName,\n//           date: date,\n//           members: members,\n//           expenses: expenses,\n//           splitted: data\n//         }\n//         if(newExpense.expense_name !== '' && newExpense.date !== '' && newExpense.members.length !== 0 && newExpense.expenses.length !== 0 &&\n//           newExpense.splitted.length !== 0) { \n//           expenseService.addData(newExpense)\n//           .then(returnedExpense => {\n//             handleFinal()\n//             setTimeout(() => {\n//               makeNullAll()\n//             }, 5000) \n//           })\n//           .catch(error => {\n//             showMessage(<div id=\"snackbar\">Validation failed, Please verify expense details.</div>)\n//           })\n//         }\n//         else {\n//           showMessage(<div id=\"snackbar\">Please enter all the details</div>)\n//         }\n//       })\n//     } \n\n//     return (\n// <div>\n//   <Container className=\"home\">\n//     <Notification msg={message} />\n\n//     <NewExpenseModal show={newExpModal} Close={handleModalDown} addExpenseModal={addExpenseModal} members={members} to_whom={to_whom} \n//             amount={amount} handleAmount={handleAmount} handleRadio={handleRadio} handleCheckbox={handleCheckbox} />\n\n//     <Row>\n//       <Col sm={9}>\n//         <ExpenseForm handleExpName={handleExpName} expName={expName} handleDate={handleDate} date={date} to_whom={to_whom} \n//                 handleMember={handleMember} addMember={addMember} removeMember={removeMember} members={members} \n//                 addExpenseModal={addExpenseModal} splitExpenses={splitExpenses} handleAmount={handleAmount} \n//                 amount={amount} handleRadio={handleRadio} handleCheckbox={handleCheckbox} handleFirst={handleFirst}\n//                 handleSecond={handleSecond} handleThird={handleThird} addExpenseToInfoCard={addExpenseToInfoCard} />\n//       </Col>\n\n//       <Col sm={3}>\n//         <InfoCard expName={expName} date={date} members={members} expenses={expenses} firstCard={firstCard} \n//               secondCard={secondCard} thirdCard={thirdCard} finalCard={finalCard} splitted={splitted} />\n//       </Col>\n//     </Row>\n//   </Container>\n//   <center className=\"footer\">\n//     <a className=\"fab fa-github\" href=\"https://github.com/Madhubalajb/Expense-Split\" rel=\"noopener noreferrer\" target=\"_blank\" />\n//     built by <a href=\"https://madhubalajb.github.io/\" rel=\"noopener noreferrer\" target=\"_blank\">madhubala jayakumaran</a>\n//   </center>\n// </div>  \n//     )\n// }\n\n// export default Home\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","Row","Col","Container","InfoCard","ExpenseForm","Notification","NewExpenseModal","expenseService","Home","message","newExpModal","handleModalDown","addExpenseModal","members","to_whom","amount","handleAmount","handleRadio","handleCheckbox","handleExpName","expName","handleDate","date","handleMember","addMember","removeMember","splitExpenses","handleFirst","handleSecond","handleThird","addExpenseToInfoCard","expenses","firstCard","secondCard","thirdCard","finalCard","splitted"],"sources":["C:/Users/rasoo/Downloads/adwait/expense-tracker_fullstack/frontend/src/Components/Home.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { Row, Col, Container } from 'react-bootstrap'\r\nimport InfoCard from './InfoCard'\r\nimport ExpenseForm from './ExpenseForm'\r\nimport Notification from './Notification'\r\nimport NewExpenseModal from './NewExpenseModal'\r\nimport expenseService from '../services/expense-split'\r\n\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div>\r\n    <Container className=\"home\">\r\n      <Notification msg={message} />\r\n\r\n      <NewExpenseModal show={newExpModal} Close={handleModalDown} addExpenseModal={addExpenseModal} members={members} to_whom={to_whom} \r\n              amount={amount} handleAmount={handleAmount} handleRadio={handleRadio} handleCheckbox={handleCheckbox} />\r\n      \r\n      <Row>\r\n        <Col sm={9}>\r\n          <ExpenseForm handleExpName={handleExpName} expName={expName} handleDate={handleDate} date={date} to_whom={to_whom} \r\n                  handleMember={handleMember} addMember={addMember} removeMember={removeMember} members={members} \r\n                  addExpenseModal={addExpenseModal} splitExpenses={splitExpenses} handleAmount={handleAmount} \r\n                  amount={amount} handleRadio={handleRadio} handleCheckbox={handleCheckbox} handleFirst={handleFirst}\r\n                  handleSecond={handleSecond} handleThird={handleThird} addExpenseToInfoCard={addExpenseToInfoCard} />\r\n        </Col>\r\n\r\n        <Col sm={3}>\r\n          <InfoCard expName={expName} date={date} members={members} expenses={expenses} firstCard={firstCard} \r\n                secondCard={secondCard} thirdCard={thirdCard} finalCard={finalCard} splitted={splitted} />\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n    <center className=\"footer\">\r\n      <a className=\"fab fa-github\" href=\"https://github.com/Madhubalajb/Expense-Split\" rel=\"noopener noreferrer\" target=\"_blank\" />\r\n      built by <a href=\"https://madhubalajb.github.io/\" rel=\"noopener noreferrer\" target=\"_blank\">madhubala jayakumaran</a>\r\n    </center>\r\n  </div>  \r\n  )\r\n}\r\n\r\nexport default Home\r\n\r\n\r\n\r\n// const Home = () => {\r\n//     const [message, setMessage] = useState('')\r\n//     const [expName, setExpName] = useState('')\r\n//     const [date, setDate] = useState('')\r\n//     const [amount, setAmount] = useState('')\r\n//     const [by_whom, setBy] = useState('')\r\n//     const [to_whom, setTo] = useState([{name: null, isChecked: false}, {name: null, isChecked: false}])\r\n//     const [members, setMembers] = useState([{name: null}, {name: null}])\r\n//     const [expenses, setExpenses] = useState([])\r\n//     const [splitted, setSplitted] = useState([])  \r\n//     const [firstCard, setFirst] = useState(false)\r\n//     const [secondCard, setSecond] = useState(false)\r\n//     const [thirdCard, setThird] = useState(false)\r\n//     const [finalCard, setFinal] = useState(false)\r\n//     const [newExpModal, setModalUp] = useState(false) \r\n//     const [isExpenseAdded, setExpenseAdded] = useState(false)      \r\n\r\n//     const handleFirst = (event) => {\r\n//       event.preventDefault()\r\n//       setFirst(true)\r\n//     }\r\n//     const handleSecond = (event) => {\r\n//       event.preventDefault()\r\n//       setSecond(true)\r\n//     }\r\n//     const handleThird = () => setThird(true)\r\n//     const handleFinal = () => setFinal(true)\r\n//     const handleModalUp = () => setModalUp(true)\r\n//     const handleModalDown = () => setModalUp(false)\r\n//     const handleExpName = (event) => setExpName(event.target.value)\r\n//     const handleDate = (event) => setDate(event.target.value)\r\n//     const handleAmount = (event) => setAmount(event.target.value)\r\n//     const handleRadio = (event) => setBy(event.target.value)  \r\n\r\n//     const handleCheckbox = (event, index) => {\r\n//         const temp = [...to_whom]\r\n//         temp[index].name = event.target.value\r\n//         temp[index].isChecked = !temp[index].isChecked\r\n//         setTo(temp)\r\n//     }\r\n\r\n//     const showMessage = (message) => {\r\n//       setMessage(message)\r\n//       setTimeout(() => {\r\n//         setMessage(null)\r\n//       }, 3000)\r\n//     }\r\n     \r\n//     const handleMember = (event, index) => {\r\n//       const temp = [...members]\r\n//       temp[index].name = event.target.value\r\n//       setMembers(temp)\r\n      \r\n//       const temp1 = [...to_whom]\r\n//       temp1[index].name = event.target.value\r\n//       setTo(temp1)      \r\n//     }\r\n   \r\n//     const addMember = () => {\r\n//       const temp = [...members]\r\n//       temp.push({name: null})\r\n//       setMembers(temp)\r\n\r\n//       const temp1 = [...to_whom]\r\n//       temp1.push({name: null, isChecked: false})\r\n//       setTo(temp1)\r\n//     }\r\n  \r\n//     const removeMember = (index) => {\r\n//       const temp = [...members]\r\n//       temp.splice(index, 1)\r\n//       setMembers(temp)\r\n\r\n//       const temp1 = [...to_whom]\r\n//       temp1.splice(index, 1)\r\n//       setTo(temp1)\r\n//     }\r\n\r\n//     const makeNullExpense = () => {\r\n//       setAmount('')\r\n//       setBy('')\r\n//       const temp = [...to_whom]\r\n//       setTo(temp.map(foo => {\r\n//         return {name: foo.name, isChecked: false}\r\n//       }))\r\n//     }\r\n\r\n//     const makeNullAll = () => {\r\n//       setExpName('')\r\n//       setDate('')\r\n//       setMembers([{name: null}, {name: null}])\r\n//       setExpenses([])\r\n//       makeNullExpense()\r\n//     }\r\n\r\n//     const addExpense = () => {\r\n//       const newExpense = {\r\n//         amount: Number(amount),\r\n//         by_whom: by_whom,\r\n//         to_whom: to_whom\r\n//       }\r\n//       if(newExpense.amount !== 0 && newExpense.by_whom !== '' && newExpense.to_whom.length !== 0 && isNaN(newExpense.amount) === false) {\r\n//         const temp = [...expenses]\r\n//         temp.push(newExpense)\r\n//         setExpenses(temp)\r\n//         setExpenseAdded(true)\r\n//         makeNullExpense()\r\n//       }\r\n//       else if(isNaN(newExpense.amount) === true) {\r\n//         showMessage(<div id=\"snackbar\">Please enter a valid Amount</div>)\r\n//       }\r\n//       else {\r\n//         showMessage(<div id=\"snackbar\">Please enter all the Expense details</div>)\r\n//       }\r\n//     } \r\n\r\n//     const addExpenseModal = (event) => {\r\n//       event.preventDefault()\r\n//       addExpense()\r\n//       if(newExpModal)\r\n//         handleModalDown()\r\n//       else\r\n//         handleModalUp()\r\n//     }\r\n\r\n//     const addExpenseToInfoCard = (event) => {\r\n//       event.preventDefault()\r\n//       if(isExpenseAdded) {\r\n//         handleThird()\r\n//         setExpenseAdded(false)\r\n//       }\r\n//       else {\r\n//         addExpense()\r\n//         handleThird()\r\n//         setExpenseAdded(false)          \r\n//       }\r\n//     }\r\n\r\n//     function calculateExpense() {\r\n//       return new Promise((resolve, reject) => {\r\n//         let expensesOfEachMembers = members.map(memb => {\r\n//           return { member: memb.name, splittedExp: [] }\r\n//         }) \r\n  \r\n//         expenses.map(expense => {\r\n//           let amount = expense.amount\r\n//           let by = expense.by_whom\r\n//           let to = expense.to_whom.filter(to => to.isChecked === true)\r\n//           let share = (to.length === 2) ? (amount / to.length).toFixed(2) : Math.floor(amount / to.length)\r\n          \r\n//           to.forEach(element => {\r\n//             let found = expensesOfEachMembers.findIndex(foo => (foo.member === element.name && foo.member !== by))\r\n//             if (found !== -1) {\r\n//               expensesOfEachMembers[found].splittedExp.push({to: by, amount: share})\r\n//             }\r\n//           })\r\n//         })\r\n  \r\n//         expensesOfEachMembers.forEach((item, firstIndex) => {\r\n//           let person1 = { name: item.member, amtToGive: 0 }\r\n//           let person2 = { name: null,amtToGive: 0 }\r\n//           let found \r\n//           let found1\r\n  \r\n//           item.splittedExp.forEach((item, secondIndex) => {\r\n//             person2.name = item.to\r\n//             person1.amtToGive = item.amount\r\n//             found = expensesOfEachMembers.findIndex(item => item.member === person2.name) \r\n            \r\n//             if(found !== -1) {\r\n//               found1 = expensesOfEachMembers[found].splittedExp.findIndex(item => item.to === person1.name)\r\n//               if(found1 !== -1) {\r\n//                 person2.amtToGive = expensesOfEachMembers[found].splittedExp[found1].amount\r\n//               }\r\n//             }\r\n            \r\n//             if(person2.amtToGive !== 0 && person1.amtToGive >= person2.amtToGive) {\r\n//               let share = person1.amtToGive - person2.amtToGive\r\n//               if(share === 0) {\r\n//                 expensesOfEachMembers[firstIndex].splittedExp.splice(secondIndex, 1)\r\n//                 expensesOfEachMembers[found].splittedExp.splice(found1, 1)\r\n//               }\r\n//               else {\r\n//                 expensesOfEachMembers[firstIndex].splittedExp[secondIndex].amount = Math.abs(share)\r\n//                 expensesOfEachMembers[found].splittedExp.splice(found1, 1)\r\n//               }\r\n//             }\r\n//             else if(person2.amtToGive !== 0 && person1.amtToGive < person2.amtToGive) {\r\n//               let share = person2.amtToGive - person1.amtToGive\r\n//               expensesOfEachMembers[firstIndex].splittedExp.splice(secondIndex, 1)\r\n//               expensesOfEachMembers[found].splittedExp[found1].amount = Math.abs(share)\r\n//             }\r\n//           })\r\n//         })\r\n//         expensesOfEachMembers = expensesOfEachMembers.filter(element => element.splittedExp.length !== 0)\r\n//         setSplitted(expensesOfEachMembers)\r\n//         resolve(expensesOfEachMembers)\r\n//       })\r\n//     } \r\n  \r\n//     const splitExpenses = () => {\r\n//       calculateExpense().then(data => {\r\n//         const newExpense = {\r\n//           expense_name: expName,\r\n//           date: date,\r\n//           members: members,\r\n//           expenses: expenses,\r\n//           splitted: data\r\n//         }\r\n//         if(newExpense.expense_name !== '' && newExpense.date !== '' && newExpense.members.length !== 0 && newExpense.expenses.length !== 0 &&\r\n//           newExpense.splitted.length !== 0) { \r\n//           expenseService.addData(newExpense)\r\n//           .then(returnedExpense => {\r\n//             handleFinal()\r\n//             setTimeout(() => {\r\n//               makeNullAll()\r\n//             }, 5000) \r\n//           })\r\n//           .catch(error => {\r\n//             showMessage(<div id=\"snackbar\">Validation failed, Please verify expense details.</div>)\r\n//           })\r\n//         }\r\n//         else {\r\n//           showMessage(<div id=\"snackbar\">Please enter all the details</div>)\r\n//         }\r\n//       })\r\n//     } \r\n\r\n//     return (\r\n      // <div>\r\n      //   <Container className=\"home\">\r\n      //     <Notification msg={message} />\r\n\r\n      //     <NewExpenseModal show={newExpModal} Close={handleModalDown} addExpenseModal={addExpenseModal} members={members} to_whom={to_whom} \r\n      //             amount={amount} handleAmount={handleAmount} handleRadio={handleRadio} handleCheckbox={handleCheckbox} />\r\n          \r\n      //     <Row>\r\n      //       <Col sm={9}>\r\n      //         <ExpenseForm handleExpName={handleExpName} expName={expName} handleDate={handleDate} date={date} to_whom={to_whom} \r\n      //                 handleMember={handleMember} addMember={addMember} removeMember={removeMember} members={members} \r\n      //                 addExpenseModal={addExpenseModal} splitExpenses={splitExpenses} handleAmount={handleAmount} \r\n      //                 amount={amount} handleRadio={handleRadio} handleCheckbox={handleCheckbox} handleFirst={handleFirst}\r\n      //                 handleSecond={handleSecond} handleThird={handleThird} addExpenseToInfoCard={addExpenseToInfoCard} />\r\n      //       </Col>\r\n\r\n      //       <Col sm={3}>\r\n      //         <InfoCard expName={expName} date={date} members={members} expenses={expenses} firstCard={firstCard} \r\n      //               secondCard={secondCard} thirdCard={thirdCard} finalCard={finalCard} splitted={splitted} />\r\n      //       </Col>\r\n      //     </Row>\r\n      //   </Container>\r\n      //   <center className=\"footer\">\r\n      //     <a className=\"fab fa-github\" href=\"https://github.com/Madhubalajb/Expense-Split\" rel=\"noopener noreferrer\" target=\"_blank\" />\r\n      //     built by <a href=\"https://madhubalajb.github.io/\" rel=\"noopener noreferrer\" target=\"_blank\">madhubala jayakumaran</a>\r\n      //   </center>\r\n      // </div>  \r\n//     )\r\n// }\r\n\r\n// export default Home\r\n\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,GAAG,EAAEC,GAAG,EAAEC,SAAS,QAAQ,iBAAiB;AACrD,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,OAAOC,cAAc,MAAM,2BAA2B;AAAA;AAGtD,MAAMC,IAAI,GAAG,MAAM;EACjB,oBACE;IAAA,wBACA,QAAC,SAAS;MAAC,SAAS,EAAC,MAAM;MAAA,wBACzB,QAAC,YAAY;QAAC,GAAG,EAAEC;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAG,eAE9B,QAAC,eAAe;QAAC,IAAI,EAAEC,WAAY;QAAC,KAAK,EAAEC,eAAgB;QAAC,eAAe,EAAEC,eAAgB;QAAC,OAAO,EAAEC,OAAQ;QAAC,OAAO,EAAEC,OAAQ;QACzH,MAAM,EAAEC,MAAO;QAAC,YAAY,EAAEC,YAAa;QAAC,WAAW,EAAEC,WAAY;QAAC,cAAc,EAAEC;MAAe;QAAA;QAAA;QAAA;MAAA,QAAG,eAEhH,QAAC,GAAG;QAAA,wBACF,QAAC,GAAG;UAAC,EAAE,EAAE,CAAE;UAAA,uBACT,QAAC,WAAW;YAAC,aAAa,EAAEC,aAAc;YAAC,OAAO,EAAEC,OAAQ;YAAC,UAAU,EAAEC,UAAW;YAAC,IAAI,EAAEC,IAAK;YAAC,OAAO,EAAER,OAAQ;YAC1G,YAAY,EAAES,YAAa;YAAC,SAAS,EAAEC,SAAU;YAAC,YAAY,EAAEC,YAAa;YAAC,OAAO,EAAEZ,OAAQ;YAC/F,eAAe,EAAED,eAAgB;YAAC,aAAa,EAAEc,aAAc;YAAC,YAAY,EAAEV,YAAa;YAC3F,MAAM,EAAED,MAAO;YAAC,WAAW,EAAEE,WAAY;YAAC,cAAc,EAAEC,cAAe;YAAC,WAAW,EAAES,WAAY;YACnG,YAAY,EAAEC,YAAa;YAAC,WAAW,EAAEC,WAAY;YAAC,oBAAoB,EAAEC;UAAqB;YAAA;YAAA;YAAA;UAAA;QAAG;UAAA;UAAA;UAAA;QAAA,QACxG,eAEN,QAAC,GAAG;UAAC,EAAE,EAAE,CAAE;UAAA,uBACT,QAAC,QAAQ;YAAC,OAAO,EAAEV,OAAQ;YAAC,IAAI,EAAEE,IAAK;YAAC,OAAO,EAAET,OAAQ;YAAC,QAAQ,EAAEkB,QAAS;YAAC,SAAS,EAAEC,SAAU;YAC7F,UAAU,EAAEC,UAAW;YAAC,SAAS,EAAEC,SAAU;YAAC,SAAS,EAAEC,SAAU;YAAC,QAAQ,EAAEC;UAAS;YAAA;YAAA;YAAA;UAAA;QAAG;UAAA;UAAA;UAAA;QAAA,QAC5F;MAAA;QAAA;QAAA;QAAA;MAAA,QACF;IAAA;MAAA;MAAA;MAAA;IAAA,QACI,eACZ;MAAQ,SAAS,EAAC,QAAQ;MAAA,wBACxB;QAAG,SAAS,EAAC,eAAe;QAAC,IAAI,EAAC,8CAA8C;QAAC,GAAG,EAAC,qBAAqB;QAAC,MAAM,EAAC;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAG,aACpH;QAAG,IAAI,EAAC,gCAAgC;QAAC,GAAG,EAAC,qBAAqB;QAAC,MAAM,EAAC,QAAQ;QAAA,UAAC;MAAqB;QAAA;QAAA;QAAA;MAAA,QAAI;IAAA;MAAA;MAAA;MAAA;IAAA,QAC9G;EAAA;IAAA;IAAA;IAAA;EAAA,QACL;AAER,CAAC;AAAA,KA9BK5B,IAAI;AAgCV,eAAeA,IAAI;;AAInB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACM;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACN;AACA;;AAEA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}